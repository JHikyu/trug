#!/usr/bin/env node
const http=require("http"),https=require("https"),fs=require("fs"),path=require("path"),argv=require("minimist")(process.argv.slice(2)),color=require("colors"),PORT=!isNaN(argv.port)&&(argv.port||argv.p)||80,HTTPS_PORT=!isNaN(argv.sslport)&&argv.sslport||443,PROJECT_PATH=path.resolve(argv.path||"."),ssl=1==argv.ssl?{key:fs.readFileSync(path.join(PROJECT_PATH,"ssl","key.pem")),cert:fs.readFileSync(path.join(PROJECT_PATH,"ssl","cert.pem"))}:{},log=require("../lib/utils")["log"],fullServer=require("../lib/fullServer"),webSocket=require("../lib/webSocket"),server=(log("Booting Trug in "+PROJECT_PATH),log("Checking project folders..."),log(`views folder: ${PROJECT_PATH}/views `+(fs.existsSync(PROJECT_PATH+"/views")?"found".green:"not found".red)),log(`public folder: ${PROJECT_PATH}/public `+(fs.existsSync(PROJECT_PATH+"/public")?"found".green:"not found".red)),log(`src folder: ${PROJECT_PATH}/src `+(fs.existsSync(PROJECT_PATH+"/src")?"found".green:"not found".red)),fs.existsSync(PROJECT_PATH+"/views")||(log("Project not setup correctly. Please run ".red+"`trug-init`".yellow+" to setup your project.".red),process.exit(1)),ssl.key&&https.createServer(ssl,async(e,r)=>{fullServer(e,r,server)}).listen(HTTPS_PORT,()=>{console.log(`Trug is running on port ${HTTPS_PORT} via ssl!`.green.bold)}),http.createServer(async(e,r)=>{fullServer(e,r,server)}).listen(PORT,()=>{console.log(("Trug is running on port "+PORT).green.bold)}));if(webSocket.init(server),fs.existsSync(PROJECT_PATH+"/socket.js")){const e=require(PROJECT_PATH+"/socket.js")(webSocket)}