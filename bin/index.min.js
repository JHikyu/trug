#!/usr/bin/env node
const http=require("http"),https=require("https"),url=require("url"),fs=require("fs"),path=require("path"),argv=require("minimist")(process.argv.slice(2)),colors=require("colors"),mime=require("mime/lite"),ejs=require("ejs"),pug=require("pug"),PORT=!isNaN(argv.port)&&(argv.port||argv.p)||80,HTTPS_PORT=!isNaN(argv.sslport)&&argv.sslport||443,PROJECT_PATH=path.resolve(argv.path||"."),SRC_PATH=path.join(PROJECT_PATH,"src"),src=e=>path.join(PROJECT_PATH,"src",e),PUBLIC_PATH=path.join(PROJECT_PATH,"public"),public=e=>path.join(PROJECT_PATH,"public",e),VIEWS_PATH=path.join(PROJECT_PATH,"views"),views=e=>path.join(PROJECT_PATH,"views",e),NO_CACHE=argv.nocache,ssl=1==argv.ssl?{key:fs.readFileSync(path.join(PROJECT_PATH,"ssl","key.pem")),cert:fs.readFileSync(path.join(PROJECT_PATH,"ssl","cert.pem"))}:{};log("Booting Trug in "+PROJECT_PATH);let trug={PORT:PORT,HTTPS_PORT:HTTPS_PORT,PROJECT_PATH:PROJECT_PATH,SRC_PATH:SRC_PATH,src:src,PUBLIC_PATH:PUBLIC_PATH,public:public,VIEWS_PATH:VIEWS_PATH,views:views};async function fullServer(n,r){const i=url.parse(n.url,!0)["pathname"];var t=path.join(PROJECT_PATH,"views",i,"/"===i?"index":""),e=url.parse(n.url,!0).query,s=await getPostBody(n),c=n.method;if("/favicon.ico"===i&&fs.existsSync(path.join(PROJECT_PATH,"public","favicon.ico")))return r.setHeader("Content-Type","image/x-icon"),void fs.createReadStream(path.join(PROJECT_PATH,"public","favicon.ico")).pipe(r);log(`request on ${i} checking `+t);let o=fileExtension(t);var l=fileExtension(path.join(t,"index"));if(l&&(o=l),!o)return fs.existsSync(path.join(PROJECT_PATH,"public",i))?(log(`serving ${i} from public folder`),r.setHeader("Content-Type",mime.getType(path.join(PROJECT_PATH,"public",i))),void fs.createReadStream(path.join(PROJECT_PATH,"public",i)).pipe(r)):(log((i+" not found").underline),r.writeHead(404,{"Content-Type":"text/plain"}),void r.end(`Cannot ${n.method} `+n.url));const a=t+(l?"/index":"")+"."+o;log((a+" found").underline);t+=l?"/index":"";let T;if(fs.existsSync(t+".js")){NO_CACHE&&delete require.cache[path.resolve(t+".js")];try{T=await require(path.resolve(t+".js"))({...trug,route:i,query:e,postBody:s,method:c})}catch(e){log(`Error running script ${t}.js`.red),log(e.stack.red)}log((t+" found").underline)}fs.readFile(a,(e,t)=>{if(e)return log((i+" not found").underline),r.writeHead(404,{"Content-Type":"text/plain"}),void r.end(`Cannot ${n.method} `+n.url);if(r.writeHead(200,{"Content-Type":"text/html"}),"pug"===o)fn=pug.compile(t,{filename:a,pretty:!0}),r.end(fn(T?.data));else if("ejs"===o)fn=ejs.compile(a.toString()),r.end(fn(T?.data));else if("html"===o)r.end(t);else if("js"===o){if(n.method!==T?.method)return r.writeHead(405,{"Content-Type":"text/plain"}),void r.end(`Cannot ${n.method} `+n.url);T?.data&&(r.writeHead(200,{"Content-Type":"text/json"}),r.end(JSON.stringify(T.data)))}r.end("")})}function fileExtension(e){return fs.existsSync(e+".pug")?"pug":fs.existsSync(e+".html")?"html":fs.existsSync(e+".ejs")?"ejs":fs.existsSync(e+".js")?"js":void 0}function log(e){console.log("[LOG]".bgGray,e.grey)}function getPostBody(r){return new Promise((t,e)=>{var n="";r.on("data",function(e){n+=e}),r.on("end",function(){const e=n.split("&");n={},e.forEach(e=>{var[e,t]=e.split("=");n[e]=t}),t(n)})})}log("Checking project folders..."),log(`views folder: ${PROJECT_PATH}/views `+(fs.existsSync(PROJECT_PATH+"/views")?"found".green:"not found".red)),log(`public folder: ${PROJECT_PATH}/public `+(fs.existsSync(PROJECT_PATH+"/public")?"found".green:"not found".red)),log(`src folder: ${PROJECT_PATH}/src `+(fs.existsSync(PROJECT_PATH+"/src")?"found".green:"not found".red)),fs.existsSync(PROJECT_PATH+"/views")&&fs.existsSync(PROJECT_PATH+"/public")&&fs.existsSync(PROJECT_PATH+"/src")||(log("Project not setup correctly. Please run ".red+"`trug-init`".yellow+" to setup your project.".red),process.exit(1)),ssl.key&&https.createServer(ssl,async(e,t)=>{fullServer(e,t)}).listen(HTTPS_PORT,()=>{console.log(`Trug is running on port ${HTTPS_PORT} via ssl!`.green.bold)}),http.createServer(async(e,t)=>{fullServer(e,t)}).listen(PORT,()=>{console.log(("Trug is running on port "+PORT).green.bold)});